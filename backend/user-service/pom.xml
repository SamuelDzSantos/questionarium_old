<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 1. Herdando do POM pai do projeto (questionarium) -->
    <parent>
        <groupId>br.com.questionarium</groupId>
        <artifactId>questionarium</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath> <!-- ajuste conforme seu layout de pastas -->
    </parent>

    <groupId>br.com.questionarium</groupId>
    <artifactId>user-service</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>user-service</name>
    <description>Microservice de Usuários (User Service)</description>

    <properties>
        <!-- A versão do Java já vem definida no POM pai como 17 -->
        <!-- Se você quiser usar uma versão diferente, pode sobrescrever aqui -->
        <java.version>17</java.version>
        <!-- Herdamos spring-cloud.version do parent (ou podemos sobrescrever aqui se necessário) -->
    </properties>

    <dependencies>
        <!-- 2. Spring Boot Starter Web (rest) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- 3. Spring Data JPA (PostgreSQL) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- 4. Spring Cloud Stream (com suporte a RabbitMQ) -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
        </dependency>

        <!-- 5. Spring AMQP (caso queira usar RabbitMQ sem Cloud Stream) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <!-- 6. Caso queira testar (JUnit, etc.) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 7. Binder de teste para Spring Cloud Stream -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-binder</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 8. Dependência do módulo “shared” (se precisar compartilhar DTOs) -->
        <dependency>
            <groupId>br.com.questionarium</groupId>
            <artifactId>shared</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <!-- 9. Herdamos o gerenciamento de versões (dependencyManagement) do POM pai -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Cloud BOM já é importado no POM pai via spring-cloud-dependencies -->
            <!-- Aqui não precisamos declarar nada extra, pois o parent já cuida disso -->
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- 10. Plugin do Spring Boot para empacotar jar executável -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 11. Compiler plugin (já herdado do parent, mas podemos sobrescrever se precisar) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
